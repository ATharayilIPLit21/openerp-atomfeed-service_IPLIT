<?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <context:property-placeholder location="classpath:atomfeed.properties"/>
    <import resource="classpath:applicationContext-openerp-client.xml"/>
    <import resource="classpath:atomFeedContext.xml"/>

    <context:spring-configured/>
    <context:annotation-config/>
    <context:component-scan base-package="org.bahmni.feed.openerp"/>
    <context:component-scan base-package="org.ict4h.atomfeed.spring.resource"/>

    <bean id="openerpCustomerFeedQuartzJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openerpCustomerFeedJob"/>
        <property name="targetMethod" value="processFeed"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="openerpCustomerFeedQuartzFailedJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openerpCustomerFeedJob"/>
        <property name="targetMethod" value="processFailedEvents"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="openerpSaleOrderFeedQuartzJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openerpSaleOrderFeedJob"/>
        <property name="targetMethod" value="processFeed"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="openerpSaleOrderFeedQuartzFailedJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openerpSaleOrderFeedJob"/>
        <property name="targetMethod" value="processFailedEvents"/>
        <property name="concurrent" value="false"/>
    </bean>
<<<<<<< HEAD
=======

    <bean id="openelisSaleOrderFeedQuartzJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openelisSaleOrderFeedJob"/>
        <property name="targetMethod" value="processFeed"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="openelisSaleOrderFeedQuartzFailedJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openelisSaleOrderFeedJob"/>
        <property name="targetMethod" value="processFailedEvents"/>
        <property name="concurrent" value="false"/>
    </bean>
>>>>>>> Neha, RT | #1855 | elis to mrs lab order consume

    <bean id="eventRecordsNumberOffsetMarkerJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="openerpEventsOptimizerJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="referenceDataFeedQuartzJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="referenceDataFeedJob"/>
        <property name="targetMethod" value="processFeed"/>
        <property name="concurrent" value="false"/>
    </bean>

    <bean id="referenceDataFeedQuartzFailedJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="referenceDataFeedJob"/>
        <property name="targetMethod" value="processFailedEvents"/>
        <property name="concurrent" value="false"/>
    </bean>


    <!-- simple trigger specify repeat interval and delay time -->
    <bean id="customerFeedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="openerpCustomerFeedQuartzJob" />
        <property name="repeatInterval" value="${customerFeedJobTrigger.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
    <bean id="customerFeedfailedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="openerpCustomerFeedQuartzFailedJob" />
        <property name="repeatInterval" value="${customerFeedfailedJobTrigger.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
    <bean id="saleOrderFeedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="openerpSaleOrderFeedQuartzJob" />
        <property name="repeatInterval" value="${scheduler.fixed.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
    <bean id="saleOrderFeedFailedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="openerpSaleOrderFeedQuartzFailedJob" />
        <property name="repeatInterval" value="${scheduler.fixed.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
<<<<<<< HEAD
=======
    <bean id="openelisSaleOrderFeedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="openelisSaleOrderFeedQuartzJob" />
        <property name="repeatInterval" value="${scheduler.fixed.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
    <bean id="openelisSaleOrderFeedFailedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="openelisSaleOrderFeedQuartzFailedJob" />
        <property name="repeatInterval" value="${scheduler.fixed.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
>>>>>>> Neha, RT | #1855 | elis to mrs lab order consume
    <bean id="eventRecordsNumberOffsetMarkerTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="eventRecordsNumberOffsetMarkerJob"/>
        <property name="repeatInterval" value="${eventRecordsNumberOffsetMarkerTrigger.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>


    <bean id="referenceDataFeedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="referenceDataFeedQuartzJob" />
        <property name="repeatInterval" value="${referenceDataFeedJobTrigger.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>
    <bean id="referenceDataFeedFailedJobTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="referenceDataFeedQuartzFailedJob" />
        <property name="repeatInterval" value="${referenceDataFeedFailedJobTrigger.delay}" />
        <property name="startDelay" value="${scheduler.initial.delay}" />
    </bean>


    <!-- scheduler factory bean to bind,the executing code and time intervals
   together -->
    <bean id="quartzSchedulerBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="customerFeedJobTrigger" />
                <ref bean="customerFeedfailedJobTrigger" />
                <ref bean="saleOrderFeedJobTrigger" />
                <ref bean="saleOrderFeedFailedJobTrigger" />
                <ref bean="openelisSaleOrderFeedJobTrigger" />
                <ref bean="openelisSaleOrderFeedFailedJobTrigger" />
                <ref bean="eventRecordsNumberOffsetMarkerTrigger"/>
                <ref bean="referenceDataFeedJobTrigger" />
                <ref bean="referenceDataFeedFailedJobTrigger" />
            </list>
        </property>
    </bean>

    <bean id="openerpCustomerFeedJob" class="org.bahmni.feed.openerp.job.OpenERPCustomerFeedJob" scope="prototype">
        <constructor-arg ref="simpleFeedJob"/>
    </bean>

    <!--<bean id="openerpCustomerFeedFailedJob" class="org.bahmni.feed.openerp.job.OpenERPCustomerFeedFailedEventJob" >-->
        <!--<constructor-arg ref="openMRSFeedJob"/>-->
    <!--</bean>-->

    <bean id="simpleFeedJob" class="org.bahmni.feed.openerp.job.SimpleFeedJob" scope="prototype">
        <constructor-arg ref="atomFeedClientHelper"/>
    </bean>

    <bean id="atomFeedClientHelper" class="org.bahmni.feed.openerp.client.AtomFeedClientHelper" scope="prototype">
        <constructor-arg ref="openERPAtomFeedProperties"/>
        <constructor-arg ref="threadlocaljdbcConnectionProvider" />
        <constructor-arg ref="openERPClient"/>
    </bean>

    <bean id="openerpSaleOrderFeedJob" class="org.bahmni.feed.openerp.job.OpenERPSaleOrderFeedJob" scope="prototype" >
        <constructor-arg ref="simpleFeedJob"/>
    </bean>

    <bean id="openelisSaleOrderFeedJob" class="org.bahmni.feed.openerp.job.OpenElisSaleOrderFeedJob" scope="prototype" >
        <constructor-arg ref="simpleFeedJob"/>
    </bean>

    <bean id="referenceDataFeedJob" class="org.bahmni.feed.openerp.job.ReferenceDataFeedJob" scope="prototype" >
        <constructor-arg ref="simpleFeedJob"/>
    </bean>

    <bean id="openerpEventsOptimizerJob" class="org.bahmni.feed.openerp.job.OpenERPEventsOptimizerJob" scope="prototype">
        <constructor-arg ref="threadlocaljdbcConnectionProvider"/>
    </bean>

    <bean id="threadlocaljdbcConnectionProvider" class="org.ict4h.atomfeed.server.repository.jdbc.ThreadLocalJdbcConnectionProvider" scope="prototype">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="${atomdb.c3p0.max_size}"/>
        <property name="minPoolSize" value="${atomdb.c3p0.min_size}"/>
        <property name="checkoutTimeout" value="${atomdb.c3p0.timeout}"/>
        <property name="maxStatements" value="${atomdb.c3p0.max_statements}"/>
        <property name="idleConnectionTestPeriod" value="${atomdb.c3p0.idle_test_period}"/>
        <property name="acquireIncrement" value="${atomdb.c3p0.acquire_increment}"/>
    </bean>


    <task:annotation-driven />
</beans>
